name: 构建题库管理系统 (简化版)

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号'
        required: true
        default: 'v1.2.6'
      platform:
        description: '目标平台'
        required: true
        default: 'windows'
        type: choice
        options:
        - windows
        - linux
        - macos

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: 安装fyne工具
      run: go install fyne.io/tools/cmd/fyne@latest
        
    - name: 下载依赖
      run: go mod download
      
    - name: 构建应用
      run: |
        # 设置目标平台
        export GOOS=${{ github.event.inputs.platform }}
        export GOARCH=amd64
        
        echo "构建平台: $GOOS-$GOARCH"
        
        # 构建可执行文件
        go build -ldflags="-s -w" -o tikulocal .
        
        # 使用fyne打包
        if [ "$GOOS" = "windows" ]; then
          fyne package -os windows -icon icon.png -name "题库管理系统"
        elif [ "$GOOS" = "linux" ]; then
          fyne package -os linux -icon icon.png -name "题库管理系统"
        elif [ "$GOOS" = "macos" ]; then
          fyne package -os darwin -icon icon.png -name "题库管理系统"
        fi
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: tikulocal-${{ github.event.inputs.platform }}-${{ github.event.inputs.version }}
        path: |
          tikulocal*
          *.exe
          *.app
          *.tar.gz
        retention-days: 30
        
    - name: 显示构建信息
      run: |
        echo "✅ 构建完成!"
        echo "📦 版本: ${{ github.event.inputs.version }}"
        echo "🖥️ 平台: ${{ github.event.inputs.platform }}"
        echo "📁 构建产物:"
        ls -la tikulocal* *.exe *.app *.tar.gz 2>/dev/null || echo "未找到构建产物" 